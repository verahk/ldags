% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_valid_partition.R
\name{is_ldag_consistent}
\alias{is_ldag_consistent}
\title{Test a partition for CSI consistency and regularity}
\usage{
is_ldag_consistent(P, nlev, stride = c(1, cumprod(nlev[-length(nlev)])))
}
\arguments{
\item{P}{(list of integer vectors)
a partition of the outcome space defined by \code{levels}.
enumerating the joint outcomes from \code{0} to \code{prod(lengths(nlev))-1}.}

\item{levels}{(list of integer vectors)
a list with outcomes of each variable.}

\item{check_regularity}{(logical constant)
if TRUE, test if parition is regular, conditional on it beeing CSI-consistent.
if FALSE, only CSI-consistency is tested.}

\item{verbose}{(logical constant)
if TRUE}
}
\value{
a logical constant
}
\description{
CSI-consistency: No part in $P$ includes
Regularity: All levels
}
\examples{
nlev <- c(2, 2)
stride <- c(1, 2)

# CSI-consistent, regular partition
P <- list(c(0, 1, 3), 2)
is_ldag_consistent(P,  nlev, stride)
is_regular(P, nlev, stride)

# not CSI-consistent partition
P <- list(c(0, 3), 2, 1)
is_ldag_consistent(P,  nlev, stride)
is_regular(P, nlev, stride)

# CSI-consistent, but not regular
P <- list(c(0, 1), c(2, 3))
is_ldag_consistent(P,  nlev, stride)
is_regular(P, nlev, stride)

P <- list(c(0, 2), c(1, 3))
is_ldag_consistent(P,  nlev, stride)
is_regular(P, nlev, stride)

# Different cardinality
}
